# name: test/sql/local/irc/test_create_secret_attach_combinations.test
# description: test combinations of create secret and attah
# group: [irc]

require avro

require parquet

require iceberg

require httpfs

# Test catalog secret and storage secret
statement ok
set enable_logging=true

statement ok
set logging_level='debug'

require-env ICEBERG_SERVER_AVAILABLE

statement ok
CREATE SECRET iceberg_secret (
	TYPE ICEBERG,
	CLIENT_ID 'admin',
	CLIENT_SECRET 'password',
	OAUTH2_SERVER_URI 'http://127.0.0.1:8181/v1/oauth/tokens',
	Authorization_type 'Oauth2'
);

statement ok
CREATE SECRET storage_secret(
	TYPE S3,
	KEY_ID 'admin',
	SECRET 'password',
	ENDPOINT '127.0.0.1:9000',
	URL_STYLE 'path',
	USE_SSL 0
);


statement ok
ATTACH '' AS my_datalake (
	TYPE ICEBERG,
	CATALOG_SECRET iceberg_secret,
	ENDPOINT 'http://127.0.0.1:8181'
);


query I
SELECT message FROM duckdb_logs where type='iceberg.Catalog.Curl.HTTPRequest' and message like '%POST%' order by timestamp
----
POST http://127.0.0.1:8181/v1/oauth/tokens (curl code 'No error')

query I
select count(*) from my_datalake.default.pyspark_iceberg_table_v2;
----
6592

# drop the iceberg secret and put everything in the attach statement
statement ok
DROP SECRET iceberg_secret;

statement ok
DETACH my_datalake;

statement ok
ATTACH '' AS my_datalake (
	TYPE ICEBERG,
	CLIENT_ID 'admin',
	CLIENT_SECRET 'password',
	OAUTH2_SERVER_URI 'http://127.0.0.1:8181/v1/oauth/tokens',
	ENDPOINT 'http://127.0.0.1:8181'
);

query I
select count(*) from my_datalake.default.pyspark_iceberg_table_v2;
----
6592

statement ok
Detach my_datalake;

# create bad storage secret to test storage secret
statement ok
CREATE SECRET storage_secret_2 (
	TYPE S3,
	KEY_ID 'wrong',
	SECRET 'wrong',
	ENDPOINT '127.0.0.1:9000',
	URL_STYLE 'path',
	USE_SSL 0
);

statement ok
ATTACH '' AS my_datalake (
	TYPE ICEBERG,
	CLIENT_ID 'admin',
	CLIENT_SECRET 'password',
	OAUTH2_SERVER_URI 'http://127.0.0.1:8181/v1/oauth/tokens',
	STORAGE_SECRET storage_secret_2,
	ENDPOINT 'http://127.0.0.1:8181'
);


# error because the storage secret is incorrect
statement error
select count(*) from my_datalake.default.pyspark_iceberg_table_v2;
----
HTTP Error


statement ok
drop secret storage_secret_2

statement ok
Detach my_datalake;

# specifically use storage secret

statement ok
ATTACH '' AS my_datalake (
	TYPE ICEBERG,
	CLIENT_ID 'admin',
	CLIENT_SECRET 'password',
	OAUTH2_SERVER_URI 'http://127.0.0.1:8181/v1/oauth/tokens',
	STORAGE_SECRET storage_secret,
	ENDPOINT 'http://127.0.0.1:8181'
);

query I
select count(*) from my_datalake.default.pyspark_iceberg_table_v2;
----
6592

statement ok
detach my_datalake;

# use secret for oauth and secret for storage
statement ok
CREATE SECRET iceberg_secret (
	TYPE ICEBERG,
	CLIENT_ID 'admin',
	CLIENT_SECRET 'password',
	OAUTH2_SERVER_URI 'http://127.0.0.1:8181/v1/oauth/tokens',
	Authorization_type 'Oauth2'
);

statement ok
ATTACH '' AS my_datalake (
	TYPE ICEBERG,
	SECRET iceberg_secret,
	STORAGE_SECRET storage_secret,
	ENDPOINT 'http://127.0.0.1:8181'
);

# FIXME: move this up
statement error
select count(*) from my_datalake.default.pyspark_iceberg_table_v2;
----
Invalid Configuration Error: Provided 'STORAGE_SECRET' is of type 'iceberg', expected 's3'


statement error
CREATE SECRET simple_iceberg_secret (
	TYPE ICEBERG,
	CLIENT_ID 'admin',
	CLIENT_SECRET 'password'
);
----
Invalid Input Error: No 'oauth2_server_uri' was provided, and no 'endpoint' was provided to fall back on (or consider changing the 'authorization_type')

statement ok
CREATE SECRET simple_iceberg_secret (
	TYPE ICEBERG,
	ENDPOINT 'http://127.0.0.1:8181',
	CLIENT_ID 'admin',
	CLIENT_SECRET 'password'
);

