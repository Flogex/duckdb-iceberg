# name: test/sql/local/iceberg_scan_generated_data_0_001.test
# description: test iceberg extension with the sf0.001 generated test set
# group: [iceberg]

require parquet

require iceberg

### Invalid iceberg metadata leads to failed statement
statement error
SELECT count(*) FROM ICEBERG_SCAN('data/bad_data/bad_iceberg_metadata.json');
----
Invalid Input Error: Fails to parse iceberg metadata from data/bad_data/bad_iceberg_metadata.json

### Iceberg spec v1

# Check count matches
query I
SELECT count(*) FROM ICEBERG_SCAN('data_generated/data/sark-local/pyspark_iceberg_table_v1');
----
<FILE>:data_generated/data/sark-local/expected_results_v1/last/count.csv

# Check schema is identical, sorting by uuid to guarantee unique order
query I nosort q1-schema
DESCRIBE SELECT * FROM ICEBERG_SCAN('data_generated/data/sark-local/pyspark_iceberg_table_v1') ORDER BY uuid;
----

query I nosort q1-schema
DESCRIBE SELECT * FROM ICEBERG_SCAN('data_generated/data/sark-local/pyspark_iceberg_table_v1/metadata/v9.metadata.json') ORDER BY uuid;
----

query I nosort q1-schema
DESCRIBE SELECT * FROM PARQUET_SCAN('data_generated/data/sark-local/expected_results_v1/last/data/*.parquet') ORDER BY uuid;
----

# Check data is identical, sorting by uuid to guarantee unique order
query I nosort q1-data
SELECT * FROM ICEBERG_SCAN('data_generated/data/sark-local/pyspark_iceberg_table_v1') ORDER BY uuid;
----

query I nosort q1-data
SELECT * FROM ICEBERG_SCAN('data_generated/data/sark-local/pyspark_iceberg_table_v1/metadata/v9.metadata.json') ORDER BY uuid;
----

query I nosort q1-data
SELECT * FROM PARQUET_SCAN('data_generated/data/sark-local/expected_results_v1/last/data/*.parquet') ORDER BY uuid;
----

# Confirm the type matches that of the iceberg schema
query IIIIII
DESCRIBE SELECT schema_evol_added_col_1 FROM ICEBERG_SCAN('data_generated/data/sark-local/pyspark_iceberg_table_v1') ORDER BY uuid;
----
schema_evol_added_col_1	BIGINT	YES	NULL	NULL	NULL

### Iceberg spec v2

# Check count matches
query I
SELECT count(*) FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2');
----
<FILE>:data_generated/data/spark-local/expected_results_v2/last/count.csv

# We should also be able to scan the metadata file directly
query I
SELECT count(*) FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2/metadata/v9.metadata.json');
----
<FILE>:data_generated/data/spark-local/expected_results_v2/last/count.csv

# Check schema is identical, sorting by uuid to guarantee unique order
query I nosort q2-schema
DESCRIBE SELECT * FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2') ORDER BY uuid;
----

query I nosort q2-schema
DESCRIBE SELECT * FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2/metadata/v9.metadata.json') ORDER BY uuid;
----

query I nosort q2-schema
DESCRIBE SELECT * FROM PARQUET_SCAN('data_generated/data/spark-local/expected_results_v2/last/data/*.parquet') ORDER BY uuid;
----

# Check data is identical, sorting by uuid to guarantee unique order
query I nosort q2-data
SELECT * FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2') ORDER BY uuid;
----

# Check data is identical, sorting by uuid to guarantee unique order
query I nosort q2-data
SELECT * FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2/metadata/v9.metadata.json') ORDER BY uuid;
----

query I nosort q2-data
SELECT * FROM PARQUET_SCAN('data_generated/data/spark-local/expected_results_v2/last/data/*.parquet') ORDER BY uuid;
----

### Test schema evolution

# Latest metadata version has correct type
query IIIIII
DESCRIBE SELECT schema_evol_added_col_1 FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2/metadata/v9.metadata.json') ORDER BY uuid;
----
schema_evol_added_col_1	BIGINT	YES	NULL	NULL	NULL

# One before has the old type
query IIIIII
DESCRIBE SELECT schema_evol_added_col_1 FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2/metadata/v8.metadata.json') ORDER BY uuid;
----
schema_evol_added_col_1	INTEGER	YES	NULL	NULL	NULL

# Even older: it did not exist yet
statement error
DESCRIBE SELECT schema_evol_added_col_1 FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2/metadata/v6.metadata.json') ORDER BY uuid;
----
Binder Error

# Check that there are injected cardinality
query II
EXPLAIN SELECT count(*) FROM ICEBERG_SCAN('data_generated/data/spark-local/pyspark_iceberg_table_v2');
----
physical_plan	<REGEX>:.* ANTI .*PARQUET_SCAN.*Rows.*Rows.*